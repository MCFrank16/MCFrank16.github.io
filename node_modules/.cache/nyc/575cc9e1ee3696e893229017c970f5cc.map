{"version":3,"sources":["Courier.js"],"names":["deliveries","create","req","res","body","Name","Model","From","To","NowAt","Status","UserID","status","send","sendy","ParcelsModel","getAll","all","findAll","getOne","one","findOne","params","id","update","updatedParcel","delete","deletee","ref","getUser","user","findUser","Number","parseInt"],"mappings":"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","file":"Courier.js","sourceRoot":"C:/Users/User/AppData/Local/GitHubDesktop/app-1.4.3/Documents/GitHub/MCFrank16.github.io/src/controllers","sourcesContent":["import ParcelsModel from '../models/Courier';\r\n\r\nconst deliveries = {\r\n  /**\r\n   * \r\n   * @param {object} req \r\n   * @param {object} res\r\n   * @returns {object} Parcel object \r\n   */\r\n  create(req, res) {\r\n    if (!req.body.Name && !req.body.Model && !req.body.From && !req.body.To\r\n       && !req.body.NowAt && !req.body.Status && !req.body.UserID) {\r\n      return res.status(400).send({'message': 'All fields are required'})\r\n    }\r\n    const sendy = ParcelsModel.create(req.body);\r\n    return res.status(201).send(sendy);\r\n  },\r\n  /**\r\n   * \r\n   * @param {object} req \r\n   * @param {object} res \r\n   * @returns {object} Parcel array\r\n   */\r\n  getAll(req, res) {\r\n    const all = ParcelsModel.findAll();\r\n    return res.status(200).send(all);\r\n  },\r\n  /**\r\n   * \r\n   * @param {object} req \r\n   * @param {object} res\r\n   * @returns {object} Parcel object\r\n   */\r\n  getOne(req, res) {\r\n    const one = ParcelsModel.findOne(req.params.id);\r\n    if (!one) {\r\n      return res.status(404).send({'message': 'Parcel not found'});\r\n    }\r\n    return res.status(200).send(one);\r\n  },\r\n  /**\r\n   * \r\n   * @param {object} req \r\n   * @param {object} res \r\n   * @returns {object} Parcel reflection\r\n   */\r\n  update(req, res) {\r\n    const update = ParcelsModel.findOne(req.params.id);\r\n    if (!update) {\r\n      return res.status(404).send({'message': 'Parcel not found'});\r\n    }\r\n    const updatedParcel = ParcelsModel.update(req.params.id, req.body)\r\n    return res.status(200).send(updatedParcel);\r\n  },\r\n  /**\r\n   * \r\n   * @param {object} req \r\n   * @param {object} res \r\n   * @returns {void} return statuc code 204 \r\n   */\r\n  delete(req, res) {\r\n    const deletee = ParcelsModel.findOne(req.params.id);\r\n    if (!deletee) {\r\n      return res.status(404).send({'message': 'Parcel not found'});\r\n    }\r\n    const ref = ParcelsModel.delete(req.params.id);\r\n    return res.status(204).send(ref);\r\n  },\r\n    \r\n  getUser(req, res){\r\n    const user = ParcelsModel.findUser(Number.parseInt(req.params.UserID, 10));\r\n      if (!user){\r\n          return res.status(404).send({\"message\": 'User not found'});\r\n      }\r\n      \r\n      return res.status(200).send(user);\r\n}    \r\n    \r\n}\r\n\r\nexport default deliveries;"]}